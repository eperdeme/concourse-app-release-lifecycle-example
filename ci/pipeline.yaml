groups:
- name: staging
  jobs:
  - staging-build-app-artifiact
  - staging-staging-build-app-code-image

jobs:
#######################################################################
###################### app-code: artifact #############################
#######################################################################
- name: staging-build-app-artifiact
  plan:
  - get: ci-repo
  - get: app-staging-version
    params:
      pre: alpha
  - get: app-repo
    trigger: true
  - task: build-artificat
    file: ci-repo/ci/tasks/build-artifact.yaml
    input_mapping:
      app: app-repo
      version: app-staging-version
    output_mapping:
      artifact: code-artifact
  # deploy / publish our artifact to our artifact storage
  - put: staging-app-artifact
    params:
      # this is NOT regexp bu bashism wildcard!!
      file: code-artifact/myapp-*.tgz
  # be sure we save our bumped version
  - put: app-staging-version
    params:
      file: app-staging-version/version

#######################################################################
###################### app-code: Docker image #########################
#######################################################################
- name: staging-staging-build-app-code-image
  plan:
  - get: staging-app-artifact
    passed: [staging-build-app-artifiact]
    trigger: true
  - get: app-staging-version
    passed: [staging-build-app-artifiact]
  - get: ci-repo
  - get: app-repo
  - task: staging-build-app-code-image
    file: ci-repo/ci/tasks/build-docker-context.yaml # TODO Add this file
    params:
      # the folder our Dockerfile and other docker context files are located in the input docker-repo
      DOCKER_PATH: './docker'
      # the filename of our app artifact in the app-artifact input
      APP_ARTIFACT_SOURCE_FILENAME: myapp-*.tgz
      # the expected filename of the app artifact in the Dockerfile of the app app-code image, see
      # https://github.com/kw-concourse-example/concourse-example-app/blob/master/docker/Dockerfile#L5
      APP_ARTIFACT_DEST_FILENAME: myapp.tgz
    input_mapping:
      # the input where are Dockerfile is located
      docker-repo: app-repo
      # the input of our app artifact
      app-artificat: staging-app-artifact
    output_mapping:
      # this will be a prepared docker-context, so the Dockerfile including all folders and the app artifact to build
      # using the docker-resource
      docker-build-context: build-context
  - put: app-code-docker-image
    get_params: { skip_download : true }
    params:
      build: build-context
      tag_as_latest: true
      tag_file: app-staging-version/version


#######################################################################
###################### resources #########################
#######################################################################
resources:
  - name: app-repo
    type: git
    source:
      uri: ((app.git-repo))
      private_key: ((github-private-key))
      branch: master

  - name: app-staging-version
    type: semver
    source:
      driver: git
      uri: ((app.git-repo))
      branch: version
      file: staging-version
      private_key: ((github-private-key))

  - name: app-code-docker-image
    type: docker-image-resource-ng
    check_every: 5m
    source:
      email: ((docker-registry.user))@nonsense.local
      username: ((docker-registry.user))
      password: ((docker-registry.password))
      repository: ((app.docker-image)) # like kwexample/concourse-example-app

  - name: staging-app-artifact
    type: s3
    source:
      bucket: myapp
      disable_ssl: true
      # our internal Minio deployed in https://github.com/EugenMayer/concourseci-server-boilerplate
      endpoint: http://minio:9000
      # this needs to be actual regexp
      regexp: myapp-(.*).tgz
      access_key_id: minio
      secret_access_key: changeme

  - name: ci-repo
    type: git
    source:
      uri: ((ci.git-repo))
      private_key: ((github-private-key))
      branch: master

resource_types:
  - name: docker-image-resource-ng
    type: docker-image
    privileged: true
    source:
      repository: eugenmayer/concourse-docker-image-resource
      tag: latest

