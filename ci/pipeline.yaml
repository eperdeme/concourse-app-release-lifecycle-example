# DO NOT CHANGE THIS FILE
# Generated by ctp (https://github.com/EugenMayer/concourse-pipeline-templateer)
# See './pipeline' for the source files
---
groups:
- name: staging
  jobs:
  - staging-build-app-artifiact
  - staging-build-app-code-image
  - promote-to-candidate
  - promote-to-release
  - merge-master-and-tag-with-release-version
jobs:
- name: staging-build-app-artifiact
  plan:
  - get: ci-repo
  - get: staging-app-version
    params:
      pre: alpha
  - get: app-develop-repo
    trigger: true
  - task: build-artificat
    file: ci-repo/ci/tasks/build-artifact.yaml
    input_mapping:
      app: app-develop-repo
      version: staging-app-version
    output_mapping:
      artifact: code-artifact
  - put: publish-staging-artificat
    resource: app-artifact
    params:
      file: code-artifact/myapp-*.tgz
  - put: save-staging-version
    resource: staging-app-version
    params:
      file: staging-app-version/version
- name: staging-build-app-code-image
  plan:
  - get: app-artifact
    passed:
    - staging-build-app-artifiact
    trigger: true
  - get: staging-app-version
    passed:
    - staging-build-app-artifiact
  - get: ci-repo
  - get: app-develop-repo
  - task: staging-build-app-code-image
    file: ci-repo/ci/tasks/build-docker-context.yaml
    params:
      DOCKER_PATH: "./docker"
      APP_ARTIFACT_SOURCE_FILENAME: myapp-*.tgz
      APP_ARTIFACT_DEST_FILENAME: myapp.tgz
    input_mapping:
      docker-repo: app-develop-repo
      app-artificat: app-artifact
    output_mapping:
      docker-build-context: build-context
  - put: app-code-docker-image
    get_params:
      skip_download: true
    params:
      build: build-context
      tag_as_latest: true
- name: promote-to-candidate
  plan:
  - get: candidate-app-version
    params:
      pre: rc
  - get: app-artifact
    passed:
    - staging-build-app-code-image
  - get: ci-repo
  - task: promote-staging-artifact-to-candidate-release-artifact
    file: ci-repo/ci/tasks/promote-artifact.yaml
    input_mapping:
      app-artifact: app-artifact
      promote-to-version: candidate-app-version
    output_mapping:
      transformed-artifact: release-artifact
  - put: publish-canidate-artificat
    resource: app-artifact
    params:
      file: release-artifact/myapp-*.tgz
  - put: save-candidate-version
    resource: candidate-app-version
    params:
      file: candidate-app-version/version
- name: promote-to-release
  plan:
  - get: release-app-version
    params:
      bump: final
  - get: app-artifact
    passed:
    - promote-to-candidate
  - get: ci-repo
  - task: run-promote-staging-artifact-to-final-release-artifact
    file: ci-repo/ci/tasks/promote-artifact.yaml
    input_mapping:
      app-artifact: app-artifact
      promote-to-version: release-app-version
    output_mapping:
      transformed-artifact: release-artifact
  - put: publish-release-artifact
    resource: app-artifact
    params:
      file: release-artifact/myapp-*.tgz
  - put: save-release-version
    resource: release-app-version
    params:
      file: release-app-version/version
  - put: increment-staging-version-by-patch
    resource: staging-app-version
    params:
      bump: patch
  - put: increment-candidate-version-by-patch
    resource: candidate-app-version
    params:
      bump: patch
- name: merge-master-and-tag-with-release-version
  plan:
  - get: app-artifact
    passed:
    - promote-to-release
    trigger: true
  - get: release-app-version
    passed:
    - promote-to-release
  - get: ci-repo
  - get: app-develop-repo
  - get: app-master-repo
  - task: run-tag-and-optional-merge-task
    file: ci-repo/ci/tasks/tag-and-optional-merge.yaml
    params:
      GIT_PRIVATE_KEY: "((github-private-key))"
      ORIGIN_BRANCH: develop
      TARGET_BRANCH: master
    input_mapping:
      repo: app-develop-repo
      artifact: app-artifact
    output_mapping:
      repo-modified: app-develop-repo-modified
  - put: app-master-repo
    params:
      repository: app-develop-repo-modified
resources:
- name: app-artifact
  type: s3
  source:
    bucket: myapp
    disable_ssl: true
    endpoint: http://minio:9000
    regexp: myapp-(.*).tgz
    access_key_id: minio
    secret_access_key: changeme
- name: app-develop-repo
  type: git
  source:
    uri: "((app.git-repo))"
    private_key: "((github-private-key))"
    branch: develop
- name: app-master-repo
  type: git
  source:
    uri: "((app.git-repo))"
    private_key: "((github-private-key))"
    branch: master
- name: app-code-docker-image
  type: docker-image-resource-ng
  check_every: 5m
  source:
    email: "((docker-registry.user))@nonsense.local"
    username: "((docker-registry.user))"
    password: "((docker-registry.password))"
    repository: "((app.docker-image))"
- name: ci-repo
  type: git
  source:
    uri: "((ci.git-repo))"
    private_key: "((github-private-key))"
    branch: master
- name: staging-app-version
  type: semver
  source:
    driver: git
    uri: "((app.git-repo))"
    branch: version
    file: staging-version
    private_key: "((github-private-key))"
- name: candidate-app-version
  type: semver
  source:
    driver: git
    uri: "((app.git-repo))"
    branch: version
    file: candidate-version
    private_key: "((github-private-key))"
- name: release-app-version
  type: semver
  source:
    driver: git
    uri: "((app.git-repo))"
    branch: version
    file: release-version
    private_key: "((github-private-key))"
resource_types:
- name: docker-image-resource-ng
  type: docker-image
  privileged: true
  source:
    repository: eugenmayer/concourse-docker-image-resource
    tag: latest
