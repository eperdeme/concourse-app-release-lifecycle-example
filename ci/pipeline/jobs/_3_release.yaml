jobs:
  #################################################################################
  ################### final release artifact transformation #######################
  #################################################################################
  - name: promote-to-release
    plan:
    - get: candidate-code-version
      params:
        bump: final
    - get: code-artifact
      passed: [promote-to-candidate]
    - get: staging-code-versionepo
    - task: run-promote-staging-artifact-to-final-release-artifact
      file: app-ci-repo/ci/tasks/promote-code-artifact.yaml
      input_mapping:
        # The input app artifact that will be transformed
        code-artifact: code-artifact
        promote-to-version: candidate-code-version
      output_mapping:
        transformed-artifact: release-artifact
    - put: publish-release-artifact
      resource: code-artifact
      params:
        # this is NOT regexp bu bashism wildcard!!
        file: release-artifact/myapp-*.tgz
    - put: save-release-version
      resource: release-code-version
      params:
        file: candidate-code-version/version
    - put: increment-staging-version-by-patch
      resource: staging-code-version
      params:
        bump: patch
    - put: increment-candidate-version-by-patch
      resource: candidate-code-version
      params:
        bump: patch

  #################################################################################
  ################### merge into master and add tag in git repo ###################
  #################################################################################

  # The artifact from the previous job contains the version and the shasum.
  # Merge and tagging require this information - using the artifact makes sure
  # we have the right one in any case in concourse!
  - name: merge-master-and-tag-with-release-version
    plan:
    - get: code-artifact
      passed: [promote-to-release]
      trigger: true
    - get: release-code-version
      passed: [promote-to-release]
    - get: app-ci-repo
    - get: code-develop-repo
    - get: app-master-repo
    - task: run-tag-and-optional-merge-task
      file: app-ci-repo/ci/tasks/tag-and-optional-merge.yaml
      params:
        GIT_PRIVATE_KEY: ((github-private-key))
        ORIGIN_BRANCH: 'develop'
        TARGET_BRANCH: 'master'
      input_mapping:
        repo: code-develop-repo
        artifact: code-artifact
      output_mapping:
        repo-modified: code-develop-repo-modified
    - put: app-master-repo
      params:
        repository: code-develop-repo-modified # Master will be checked out here.
    # We patch after the release is completely finalized was successful,
    # because candidate in the next cycle will only add rc-X.

resources:
  - name: release-code-version
    type: semver
    source:
      driver: git
      uri: ((app.git-repo))
      branch: version
      file: release-version
      private_key: ((github-private-key))
